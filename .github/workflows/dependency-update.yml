name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Check for dependency updates
      id: check-updates
      run: |
        echo "Checking for dependency updates..."
        ./gradlew dependencyUpdates --revision release
        echo "Updates available: ${{ steps.check-updates.outputs.updates }}"

    - name: Create Pull Request for updates
      if: steps.check-updates.outputs.updates == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: update dependencies'
        body: |
          ## Dependency Updates
          
          This PR updates the following dependencies:
          
          - Updated dependencies based on latest releases
          - Security patches and bug fixes
          
          ### Checklist
          - [ ] Tests pass
          - [ ] Code quality checks pass
          - [ ] No breaking changes
          
          Auto-generated by GitHub Actions.
        branch: dependency-updates
        delete-branch: true
        labels: |
          dependencies
          automated
        assignees: ${{ github.repository_owner }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: update-dependencies
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Run OWASP Dependency Check
      run: ./gradlew dependencyCheckAnalyze

    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: build/reports/dependency-check-report.html
        retention-days: 30

    - name: Comment on PR if vulnerabilities found
      uses: actions/github-script@v7
      if: failure() && github.event_name == 'pull_request'
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const botComment = comments.find(comment => comment.user.type === 'Bot' && comment.body.includes('Security Scan'));
          
          if (botComment) {
            await github.rest.issues.updateComment({
              comment_id: botComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Security Scan Results
              
              ⚠️ **Security vulnerabilities detected!**
              
              Please review the security report and address any critical issues before merging.
              
              [View Security Report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)`
            });
          } else {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Security Scan Results
              
              ⚠️ **Security vulnerabilities detected!**
              
              Please review the security report and address any critical issues before merging.
              
              [View Security Report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)`
            });
          } 
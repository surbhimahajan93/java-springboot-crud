name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  JAVA_VERSION: '17'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    
    environment: staging
    
    steps:
    - name: Deploy to staging environment
      run: |
        echo "Deploying to staging environment..."
        echo "Image: ${{ needs.build-and-push.outputs.image-tag }}"
        echo "Digest: ${{ needs.build-and-push.outputs.image-digest }}"
        
        # Add your staging deployment logic here
        # Example: kubectl apply, docker-compose, etc.
        
        echo "‚úÖ Successfully deployed to staging!"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    
    environment: production
    
    steps:
    - name: Deploy to production environment
      run: |
        echo "Deploying to production environment..."
        echo "Image: ${{ needs.build-and-push.outputs.image-tag }}"
        echo "Digest: ${{ needs.build-and-push.outputs.image-digest }}"
        
        # Add your production deployment logic here
        # Example: kubectl apply, docker-compose, etc.
        
        echo "‚úÖ Successfully deployed to production!"

  notify-deployment:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-staging, deploy-production]
    if: always()

    steps:
    - name: Notify on success
      if: success()
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "Image: ${{ needs.build-and-push.outputs.image-tag }}"
        echo "Environment: ${{ github.event.inputs.environment || 'production' }}"

    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" 
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.spotbugs' version '5.2.1'
    id 'pmd' version '6.55.0'
    id 'com.diffplug.spotless' version '6.23.3'
    id 'org.owasp.dependencycheck' version '8.4.3'
    id 'com.github.ben-manes.versions' version '0.49.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// SpotBugs configuration
spotbugs {
    effort = 'max'
    reportLevel = 'medium'
    excludeFilter = file("$rootDir/config/spotbugs/exclude.xml")
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugsTest {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/test/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

// PMD configuration
pmd {
    consoleOutput = true
    toolVersion = '6.55.0'
    rulesMinimumPriority = 5
    ruleSetFiles = files("$rootDir/config/pmd/ruleset.xml")
}

pmdMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/pmd/main/pmd.html")
        }
    }
}

pmdTest {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/pmd/test/pmd.html")
        }
    }
}

// Spotless configuration
spotless {
    java {
        googleJavaFormat('1.18.1')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
    gradle {
        target '*.gradle'
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
}

// OWASP Dependency Check configuration
dependencyCheck {
    failBuildOnCVSS = 7
    formats = ['HTML', 'JSON']
    suppressionFile = file("$rootDir/config/dependency-check/suppressions.xml")
} 